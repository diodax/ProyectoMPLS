@model IEnumerable<ProyectoMPLS.Models.Topologia.Afinidad>

<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
    <h4 class="modal-title" id="myModalLabel">Lista de Afinidades</h4>
</div>

<div class="modal-body">
    <table class="table table-striped table-bordered"" id="tblAfinidades">
        <thead>
            <tr>
                @*<th>
                    @Html.DisplayNameFor(model => model.idProyecto)
                </th>*@
                @*<th>
                    @Html.DisplayNameFor(model => model.idAfinidad)
                </th>*@
                <th>
                    @Html.DisplayNameFor(model => model.cDescripcion)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.cColor)
                </th>
                @*<th></th>*@
            </tr>
        </thead>

        @foreach (var item in Model)
        {
            <tbody>
                <tr>
                    @*<td>
                        @Html.DisplayFor(modelItem => item.idProyecto)
                    </td>*@
                    @*<td>
                        @Html.DisplayFor(modelItem => item.idAfinidad)
                    </td>*@
                    <td class="descripcion">
                        @Html.DisplayFor(modelItem => item.cDescripcion)
                    </td>
                    <td class="color">
                        @Html.DisplayFor(modelItem => item.cColor)
                    </td>
                    @*<td>*@
                        @*@Html.ActionLink("Editar", "Editar", new { idProyecto = item.idProyecto }, new { @class = "btn btn-default" })*@
                        @*@Html.ActionLink("Details", "Details", new { /* id=item.PrimaryKey */ }, new { @class = "btn btn-default" })*@
                        @*@Html.ActionLink("Eliminar", "Delete", new { /* id=item.PrimaryKey */ }, new { @class = "btn btn-default" })*@
                    @*</td>*@
                </tr>
            </tbody>

        }

    </table>

</div>


<div class="modal-footer">
    <button class="btn" id="addAfinidad">Agregar Afinidad</button>
    <button class="btn" data-dismiss="modal">Cerrar</button>
    @*<input class="btn btn-primary" type="submit" value="Guardar" />*@
</div>

<script>
    $(document).ready(function () {
        

        //var table = $('#tblAfinidades').dataTable({
        //    "columns": [{
        //        "visible": false
        //    },
        //    null,
        //    null]
        //});

        var table = $('#tblAfinidades').DataTable({
            "fnRowCallback": function (nRow, aData, iDisplayIndex) {
                nRow.className = "color";
                return nRow;
            }
        });

        $('#addAfinidad').on('click', function () {
            table.row.add(["none", "Rojo"]).draw(false);
        });

        var Colores = [
        "Rojo",
        "Verde",
        "Azul",
        "Amarillo"
        ];

        $('#tblAfinidades tbody').on('click', '.descripcion', function () {
            var row = this.parentElement;
            if (!$('#tblAfinidades').hasClass("editing")) {
                $('#tblAfinidades').addClass("editing");
                var data = table.row(row).data();
                var $row = $(row);
                var thisDescripcion = $row.find("td:nth-child(1)");
                var thisDescripcionText = thisDescripcion.text();
                thisDescripcion.empty().append($("<select></select>", {
                    "id": "Descripcion_" + data[0],
                    "class": "changeDescripcion"
                }).append(function () {
                    var options = [];
                    $.each(Descripciones, function (k, v) {
                        options.push($("<option></option>", {
                            "text": v,
                            "value": v
                        }))
                    })
                    return options;
                }));
                $("#Descripcion_" + data[0]).val(thisDescripcionText)
            }
        });
        $('#tblAfinidades tbody').on('click', '.color', function () {
            var row = this.parentElement;
            if (!$('#tblAfinidades').hasClass("editing")) {
                $('#tblAfinidades').addClass("editing");
                var data = table.row(row).data();
                var $row = $(row);
                var thisColor = $row.find("td:nth-child(2)");
                var thisColorText = thisColor.text();
                thisColor.empty().append($("<select></select>", {
                    "id": "Color_" + data[0],
                    "class": "changeColor"
                }).append(function () {
                    var options = [];
                    $.each(Colores, function (k, v) {
                        options.push($("<option></option>", {
                            "text": v,
                            "value": v
                        }))
                    })
                    return options;
                }));
                $("#Color_" + data[0]).val(thisColorText)
            }
        });
        $('#tblAfinidades tbody').on("change", ".changeDescripcion", function () {
            var val = $(this).val();
            $(this).parent("td").empty().text(val);
            $('#tblAfinidades').removeClass("editing");
        });
        $('#tblAfinidades tbody').on("change", ".changeColor", function () {
            var val = $(this).val();
            $(this).parent("td").empty().text(val);
            $('#tblAfinidades').removeClass("editing");
        });
    });
</script>