@model ProyectoMPLS.Models.Comunicacion.ProyectoRaspberryViewModel

<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
    <h4 class="modal-title" id="myModalLabel">Nuevo Proyecto (Raspberry Pi)</h4>
</div>

@using (Html.BeginForm("CrearProyectoRP", "Topologia", FormMethod.Post, new { @class = "form-horizontal", role = "form", id = "DataForm" }))
{
    <div class="modal-body">
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new {@class = "text-danger"})

        <div class="form-group">
            <label for="focusedinput" class="col-sm-3 control-label">
                @Html.LabelFor(model => model.cUserName, htmlAttributes: new {@class = "control-label col-md-2"})
            </label>
            <div class="col-md-9">
                @Html.EditorFor(model => model.cUserName, new {htmlAttributes = new {@class = "form-control", @readonly = "readonly"}})
                @Html.ValidationMessageFor(model => model.cUserName, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            <label for="focusedinput" class="col-sm-3 control-label">
                @Html.LabelFor(model => model.cFileName, htmlAttributes: new {@class = "control-label col-md-2"})
            </label>
            <div class="col-md-9">
                @Html.EditorFor(model => model.cFileName, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.cFileName, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            <label for="focusedinput" class="col-sm-3 control-label">
                @Html.LabelFor(model => model.cRaspberryIP, htmlAttributes: new {@class = "control-label col-md-2"})
            </label>
            <div class="col-md-9">
                @Html.EditorFor(model => model.cRaspberryIP, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.cRaspberryIP, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            <label for="focusedinput" class="col-sm-3 control-label">
                @Html.LabelFor(model => model.nPuerto, htmlAttributes: new {@class = "control-label col-md-2"})
            </label>
            <div class="col-md-9">
                @Html.EditorFor(model => model.nPuerto, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.nPuerto, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            <label for="focusedinput" class="col-sm-3 control-label">
                @Html.LabelFor(model => model.cRouterIP, htmlAttributes: new {@class = "control-label col-md-2"})
            </label>
            <div class="col-md-9">
                @Html.EditorFor(model => model.cRouterIP, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.cRouterIP, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            <label for="focusedinput" class="col-sm-3 control-label">
                @Html.LabelFor(model => model.cCommunityString, htmlAttributes: new {@class = "control-label col-md-2"})
            </label>
            <div class="col-md-9">
                @Html.EditorFor(model => model.cCommunityString, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.cCommunityString, "", new {@class = "text-danger"})
            </div>
        </div>

        @*<div class="form-group">
            <div class="col-md-offset-2 col-md-9">
                <input type="submit" value="Crear" class="btn btn-default"/>
                <button type="submit" class="btn btn-default">Crear</button>
            </div>
        </div>*@
    </div>

    <div class="modal-footer">
        <button class="btn btn-default" data-dismiss="modal">Cancelar</button>
        <a class="btn btn-primary" id="submitProyecto">Crear</a>
        @*<div class="loading-gif">*@
            <img src="@Url.Content("~/Content/Images/ajax-loader.gif")" class="loading-gif" />
        @*</div>*@
    </div>
}

@*<div>
    @Html.ActionLink("Volver", "Index")
</div>*@

<script>
    //alert("its early");
    $(document).ready(function () {
        $(".loading-gif").hide();
        //alert("its getting ready");
        $("#submitProyecto").click(function () {
            //alert("its going in");
            $(".loading-gif").show();
            var form = $("#DataForm")[0];
            var formData = new FormData(form);
            $.ajax({
                url: '@Url.Action("CrearProyectoRP", new { controller = "Topologia" })',
                type: 'POST',
                contentType: false,
                processData: false,
                data: formData,
                
                xhr: function () {
                    var xhr = new window.XMLHttpRequest();
                    //Upload progress
                    xhr.upload.addEventListener("progress", function (evt) {
                        if (evt.lengthComputable) {
                            //var percentComplete = evt.loaded / evt.total;
                            ////Do something with upload progress
                            //console.log(percentComplete);
                            $(".loading-gif").show();
                        } else {
                            $(".loading-gif").show();
                        }
                    }, false);
                    //Download progress
                    xhr.addEventListener("progress", function (evt) {
                        if (evt.lengthComputable) {
                            var percentComplete = evt.loaded / evt.total;
                            //Do something with download progress
                            $(".loading-gif").show();
                        } else {
                            $(".loading-gif").show();
                        }
                    }, false);
                    return xhr;
                },
                
                success: function (result) {
                    if (result.success) {
                        $('#myModal').modal('hide');
                        window.location.replace(result.url);
                        //window.location.reload(true);   //refresh page
                        @*window.location.href = '@Url.Action("CrearEmpleado", "Empleados")';*@
                        } else {
                        $('#myModalContent').html(result);
                    }
                },  
                error: function (error) { $("#error").html(error); }
            });
        });
    });
</script>