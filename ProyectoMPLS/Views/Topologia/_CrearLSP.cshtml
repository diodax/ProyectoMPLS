@model ProyectoMPLS.Models.Topologia.LSP

<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
    <h4 class="modal-title" id="myModalLabel">Ruteo Explícito</h4>
</div>

@using (Html.BeginForm("_CrearLSP", "Topologia", FormMethod.Post, new { @class = "form-horizontal", role = "form", id = "DataForm" }))
{
<div class="modal-body">
   
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

     
        @Html.HiddenFor(model => model.idProyecto)
        @Html.HiddenFor(model => model.idLSP)
        
            
    <div class="form-group">
        <label for="focusedinput" class="col-sm-3 control-label">
            @Html.LabelFor(model => model.cNombre)
        </label>
        <div class="col-md-6">
            @Html.EditorFor(model => model.cNombre, new { htmlAttributes = new { @class = "form-control" } })
            @Html.Raw(HttpUtility.HtmlDecode(@Html.ValidationMessageFor(model => model.cNombre, "", new { @class = "text-danger" }).ToHtmlString()))
        </div>
    </div>

    <div class="form-group">
        <label for="focusedinput" class="col-sm-3 control-label">
            @Html.LabelFor(model => model.nBandwidth)
        </label>
        <div class="col-md-6">
            @Html.EditorFor(model => model.nBandwidth, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.nBandwidth, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label for="focusedinput" class="col-sm-3 control-label">
            @Html.LabelFor(model => model.idRouterOrigen)
        </label>
        <div class="col-md-6">
            @Html.DropDownListFor(model => model.idRouterOrigen, Model.listaNodosDisponibles, new { @class = "form-control", @id = "dpxNextHop" })
            @Html.ValidationMessageFor(model => model.idRouterOrigen, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label for="focusedinput" class="col-sm-3 control-label">
            @Html.LabelFor(model => model.idRouterDestino)
        </label>
        <div class="col-md-5">
            @Html.EditorFor(model => model.idRouterDestino, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.idRouterDestino, "", new { @class = "text-danger" })
            
        </div>
        <div class="col-md-1">
            <button type="button" class="btn btn-info" id="btnAddSalto">
                <p class="fa fa-plus"></p>
            </button>
        </div>
    </div> 
          

    <div>
        <ul class="timeline">
            <li>
                <div class="timeline-badge"><i class="fa fa-check"></i></div>
                <div class="timeline-panel">
                    <div class="timeline-heading">
                        <h4 class="timeline-title">Lorem ipsum dolor</h4>
                       
                    </div>
                    @*<div class="timeline-body">
                        <p>Lorem ipsum dolor sit luptas suscipit facere rem dicta, debitis.</p>
                    </div>*@
                </div>
            </li>
        
        </ul>

    </div>

    <!--
      This is a combination of two pens:

      CSS3 Horizontal Timeline
      By Peiwen Lu Follow
      http://codepen.io/P233/details/LobqH

      Form Progress
      By Robin Brons Follow
      http://codepen.io/bronsrobin/details/dKqcf


      At the moment I don't need the functionality of showing content on click, but it can easily be re-added. The HTML didn't change much.

      The big version adapts to 100% width. The small version is set to 200px, but also works using the full width.

      I needed an easy adaptable 'summary'-like version as well.
      This is using the same HTML and minimal CSS modifications.
      Colors and other things can be configured by using the SCSS variables.

      For a 'debugging'-view set $timeline-debug: true;

      It's based on bootstrap v3 but only because of the text-alignment. You could do it without. I'm just lazy.
    -->

    <h1>Horizontal Timeline</h1>

    <br>

    <ol class="timeline">
        <li class="timeline__step done">
            <input class="timeline__step-radio" id="trigger1{{identifier}}" name="trigger{{identifier}}" type="radio">

            <label class="timeline__step-label" for="trigger1{{identifier}}">
                <span class="timeline__step-content">
                    12 May 2013
                </span>
            </label>

            <span class="timeline__step-title">
                Step 1
            </span>

            <i class="timeline__step-marker">1</i>
        </li>
        <li class="timeline__step done">
            <input class="timeline__step-radio" id="trigger2{{identifier}}" name="trigger{{identifier}}" type="radio">

            <label class="timeline__step-label" for="trigger2{{identifier}}">
                <span class="timeline__step-content">
                    14 May 2013
                </span>
            </label>

            <span class="timeline__step-title">
                Step 2
            </span>

            <i class="timeline__step-marker">2</i>
        </li>
        <li class="timeline__step">
            <input class="timeline__step-radio" id="trigger3{{identifier}}" name="trigger{{identifier}}" type="radio">

            <label class="timeline__step-label" for="trigger3{{identifier}}">
                <span class="timeline__step-content">
                    15 May 2013
                </span>
            </label>

            <span class="timeline__step-title">
                Step 3
            </span>

            <i class="timeline__step-marker">3</i>
        </li>
        <li class="timeline__step">
            <input class="timeline__step-radio" id="trigger4{{identifier}}" name="trigger{{identifier}}" type="radio">

            <label class="timeline__step-label" for="trigger4{{identifier}}">
                <span class="timeline__step-content">
                    16 May 2013
                </span>
            </label>

            <span class="timeline__step-title">
                Step 4
            </span>

            <i class="timeline__step-marker">4</i>
        </li>
    </ol>

    <br><br>

    <h2>Summary Version</h2>
    <br>

    <ol class="timeline timeline--summary">
        <li class="timeline__step done">
            <input class="timeline__step-radio" id="trigger1{{identifier}}" name="trigger{{identifier}}" type="radio">

            <label class="timeline__step-label" for="trigger1{{identifier}}">
                <span class="timeline__step-content">
                    12 May 2013
                </span>
            </label>

            <span class="timeline__step-title">
                Step 1
            </span>

            <i class="timeline__step-marker">1</i>
        </li>
        <li class="timeline__step done">
            <input class="timeline__step-radio" id="trigger2{{identifier}}" name="trigger{{identifier}}" type="radio">

            <label class="timeline__step-label" for="trigger2{{identifier}}">
                <span class="timeline__step-content">
                    14 May 2013
                </span>
            </label>

            <span class="timeline__step-title">
                Step 2
            </span>

            <i class="timeline__step-marker">2</i>
        </li>
        <li class="timeline__step">
            <input class="timeline__step-radio" id="trigger3{{identifier}}" name="trigger{{identifier}}" type="radio">

            <label class="timeline__step-label" for="trigger3{{identifier}}">
                <span class="timeline__step-content">
                    15 May 2013
                </span>
            </label>

            <span class="timeline__step-title">
                Step 3
            </span>

            <i class="timeline__step-marker">3</i>
        </li>
        <li class="timeline__step">
            <input class="timeline__step-radio" id="trigger4{{identifier}}" name="trigger{{identifier}}" type="radio">

            <label class="timeline__step-label" for="trigger4{{identifier}}">
                <span class="timeline__step-content">
                    16 May 2013
                </span>
            </label>

            <span class="timeline__step-title">
                Step 4
            </span>

            <i class="timeline__step-marker">4</i>
        </li>
    </ol>

</div>
<div class="modal-footer">
    <button class="btn" data-dismiss="modal">Cerrar</button>
    <input class="btn btn-primary" type="submit" value="Save" />
</div>
}

@section scripts
{
    <script>
        //Vista, agregar un dropdown que diga Next Hop (Proximo Salto)

        //Obtener la lista de todos los nodos de la topologia
        //SP que mande la lista de todos los nodos por default, y que mande los enlaces/nodos adyacentes si le
        //  especifico un nodo

        $(document).ready(function () {
            $("#btnAddSalto").click(function () {
                var cDescripcionNodo = $("#dpxNextHop option:selected").text();
                $("ul").append('<li class="list-group-item">' + cDescripcionNodo + '</li>');
            });

            //Listado de Eventos 
            //-Cuando se modifica el dropdown de Nodo de Origen, debe cambiar la lista de Enlaces/Nodos adyacentes
            //-Cuando se modifica el dropdown de Nodo de Origen, debe cambiar el primer elemento de la lista LSP
            //-Cuando se modifica el Ancho de Banda, se debe cambiar la lista de Enlaces/Nodos adyacentes para que cumplan con el requisito
            //-Crear un blockquote de informacion del enlace, que se actualiza cada vez que se selecciona un Enlace/Nodo como Next Hop
            //-Cuando se presiona el boton de Agregar Camino, debe aparecer en la lista LSP el ultimo nodo agregado.
            //-Ademas, debe de refrescarse el nodo actual para el dropdown de Next Hop
            //-El ultimo elemento de la lista LSP debe de tener un boton de Eliminar, los demas tambien, pero disabled

        });

        //function RefrescarListaNodos()

    </script>    
}


