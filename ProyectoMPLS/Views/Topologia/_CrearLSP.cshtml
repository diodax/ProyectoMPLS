@model ProyectoMPLS.Models.Topologia.LSP

<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
    <h4 class="modal-title" id="myModalLabel">Ruteo Explícito</h4>
</div>

@using (Html.BeginForm())
{
<div class="modal-body">
   
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

     
        @Html.HiddenFor(model => model.idProyecto)
        @Html.HiddenFor(model => model.idLSP)
            
    <div class="form-group">
        <label for="focusedinput" class="col-sm-3 control-label">
            @Html.LabelFor(model => model.cNombre)
        </label>
        <div class="col-md-6">
            @Html.EditorFor(model => model.cNombre, new { htmlAttributes = new { @class = "form-control" } })
            @Html.Raw(HttpUtility.HtmlDecode(@Html.ValidationMessageFor(model => model.cNombre, "", new { @class = "text-danger" }).ToHtmlString()))
        </div>
    </div>

           
            @*<div class="row form-group">
                @Html.LabelFor(model => model.cNombre, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.cNombre, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.cNombre, "", new { @class = "text-danger" })
                </div>
            </div>*@

            <div class="row form-group">
                @Html.LabelFor(model => model.nBandwidth, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.nBandwidth, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.nBandwidth, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="row form-group">
                @Html.LabelFor(model => model.idRouterOrigen, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.idRouterOrigen, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.idRouterOrigen, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="row form-group">
                @Html.LabelFor(model => model.idRouterDestino, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.idRouterDestino, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.idRouterDestino, "", new { @class = "text-danger" })
                </div>
            </div>

           

           
    
    

</div>
<div class="modal-footer">
    <button class="btn" data-dismiss="modal">Cerrar</button>
    <input class="btn btn-primary" type="submit" value="Save" />
</div>
}


